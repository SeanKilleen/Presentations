name: "Build / Test Presentation Code"

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  akka-intro:
    name: "Akka Intro C# Code"
    runs-on: ubuntu-latest
    env:
      SOLUTION_LOCATION: "./AkkaIntro/code/AkkaIntro.Core.sln"
    steps:
      - uses: actions/checkout@v2
        name: Pull the code
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.x
      - name: Restore dependencies
        run: dotnet restore $SOLUTION_LOCATION
      - name: Build
        run: dotnet build --no-restore $SOLUTION_LOCATION
      - name: Test
        run: dotnet test --no-build --verbosity normal $SOLUTION_LOCATION
  joy-of-functional-testing-code:
    name: "Joy of Functional Testing C# Code"
    runs-on: ubuntu-latest
    env:
      SOLUTION_LOCATION: "./joy-of-functional-mdx/code/JoyOfFunctionalTesting.sln"
    steps:
      - uses: actions/checkout@v2
        name: Pull the code
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.x
      - name: Restore dependencies
        run: dotnet restore $SOLUTION_LOCATION
      - name: Build
        run: dotnet build --no-restore $SOLUTION_LOCATION
      - name: Test
        run: dotnet test --no-build --verbosity normal $SOLUTION_LOCATION
  mdx-presentations:
    name: "MDX Presentations"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 15.x]
        build-location: ["./netcore-workshop-mdx", "./ServerlessIsMore-mdx"]

    steps:
      - uses: actions/checkout@v2
        name: Pull the Code
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
        name: Restore Packages
        working-directory: ${{ matrix.build-location }}
      - run: npm run build --if-present
        name: build
        working-directory: ${{ matrix.build-location }}
